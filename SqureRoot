function evaluateExpression(expr, variables, values) {
    // Step 1: Replace variables with their values
    for (let i = 0; i < variables.length; i++) {
        let reg = new RegExp("\\b" + variables[i] + "\\b", "g");
        expr = expr.replace(reg, values[i]);
    }

    // Step 2: Evaluate sqrt parts one by one
    let match;
    let sqrtPattern = /sqrt\(([^)]+)\)/;
    while ((match = expr.match(sqrtPattern)) !== null) {
        let num = eval(match[1]); // Evaluate inside sqrt
        if (num < 0) return -1;   // Negative inside sqrt â†’ invalid
        expr = expr.replace(sqrtPattern, Math.sqrt(num));
    }

    // Step 3: Final calculation
    let result = eval(expr);
    return Math.round(result * 100) / 100; // Round to 2 decimals
}

// Test cases
console.log(evaluateExpression("sqrt(a) + c", ["a", "b", "c"], [9, 4, 3])); // 6.0
console.log(evaluateExpression("sqrt(x * y) - z", ["x", "y", "z"], [2, -3, 1])); // -1
console.log(evaluateExpression("sqrt(m) + sqrt(n)", ["m", "n"], [16, 9])); // 7.0
